{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30804,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# THM - Cryptography Excercises and work\n\n1. Work for thmes , math and related ","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19"}},{"cell_type":"code","source":"# SexyPanties\nfrom rich import print as rprint # For rprinting\nfrom rich.pretty import pprint # For pretty printing\nfrom rich import inspect # For inspect\nfrom rich.console import Console # For console.print\nfrom rich.markdown import Markdown # For markdow\nfrom rich.panel import Panel # For Panel()\nfrom rich import box # For Panel Boxes\nfrom rich.prompt import Prompt # For Prompting \nfrom rich.style import Style # For styles colors\nfrom rich.text import Text # For text Styles\nconsole = Console() # Standard code to access console\nfrom rich.traceback import install\ninstall(show_locals=True)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T16:26:27.319951Z","iopub.execute_input":"2024-12-18T16:26:27.321263Z","iopub.status.idle":"2024-12-18T16:26:27.537457Z","shell.execute_reply.started":"2024-12-18T16:26:27.321204Z","shell.execute_reply":"2024-12-18T16:26:27.535869Z"}},"outputs":[{"execution_count":1,"output_type":"execute_result","data":{"text/plain":"<bound method InteractiveShell.excepthook of <ipykernel.zmqshell.ZMQInteractiveShell object at 0x7c20e04ac610>>"},"metadata":{}}],"execution_count":1},{"cell_type":"code","source":"# Python test codes \n\nrprint('Smelly Pantys')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T16:26:27.540413Z","iopub.execute_input":"2024-12-18T16:26:27.541025Z","iopub.status.idle":"2024-12-18T16:26:27.555141Z","shell.execute_reply.started":"2024-12-18T16:26:27.540941Z","shell.execute_reply":"2024-12-18T16:26:27.553656Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"Smelly Pantys\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">Smelly Pantys\n</pre>\n"},"metadata":{}}],"execution_count":2},{"cell_type":"markdown","source":"#  Code Testing will be done here ","metadata":{}},{"cell_type":"code","source":"# Section is for doing some opertaions on prime numbers \n\nfrom sympy import isprime, primerange\n\n# Check primality of a number\nif isprime(17):\n    print(\"17 is a prime number\")\n\n# Generate prime numbers in a range\nprimes = list(primerange(10, 30))\nrprint(primes)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T16:26:27.556732Z","iopub.execute_input":"2024-12-18T16:26:27.557136Z","iopub.status.idle":"2024-12-18T16:26:28.086315Z","shell.execute_reply.started":"2024-12-18T16:26:27.557098Z","shell.execute_reply":"2024-12-18T16:26:28.084501Z"}},"outputs":[{"name":"stdout","text":"17 is a prime number\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"\u001b[1m[\u001b[0m\u001b[1;36m11\u001b[0m, \u001b[1;36m13\u001b[0m, \u001b[1;36m17\u001b[0m, \u001b[1;36m19\u001b[0m, \u001b[1;36m23\u001b[0m, \u001b[1;36m29\u001b[0m\u001b[1m]\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">[</span><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">11</span>, <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">13</span>, <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">17</span>, <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">19</span>, <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">23</span>, <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">29</span><span style=\"font-weight: bold\">]</span>\n</pre>\n"},"metadata":{}}],"execution_count":3},{"cell_type":"markdown","source":"## Python Packages for cryptography \n\n1. https://cryptography.io/en/latest/ - Suggested by gemini for modern cryptgraphy","metadata":{}},{"cell_type":"code","source":"!pip install cryptography -q","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T16:26:28.089245Z","iopub.execute_input":"2024-12-18T16:26:28.089869Z","iopub.status.idle":"2024-12-18T16:26:44.081867Z","shell.execute_reply.started":"2024-12-18T16:26:28.089824Z","shell.execute_reply":"2024-12-18T16:26:44.079892Z"}},"outputs":[],"execution_count":4},{"cell_type":"markdown","source":"### Testing RSA Algo \n1. This was part of the stuff you are studying ","metadata":{}},{"cell_type":"code","source":"# Running operations with cryptography package\n\nfrom cryptography.hazmat.primitives.asymmetric import rsa\n\ndef r1():\n    private_key = rsa.generate_private_key(\n\n    public_exponent=65537,\n\n    key_size=2048,\n        )\n\n    private_numbers = private_key.private_numbers()\n    rprint(private_key)\n    rprint(f'P Number = {private_numbers.p}')\n    rprint(f'Q Number = {private_numbers.q}')\n    rprint(f'D Number = {private_numbers.d}')\n    # inspect(private_key, all=True)\n\n# Execution zone \nr1()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T16:26:44.085105Z","iopub.execute_input":"2024-12-18T16:26:44.085741Z","iopub.status.idle":"2024-12-18T16:26:44.366782Z","shell.execute_reply.started":"2024-12-18T16:26:44.085647Z","shell.execute_reply":"2024-12-18T16:26:44.364780Z"},"scrolled":true},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1m<\u001b[0m\u001b[1;95mcryptography.hazmat.bindings._rust.openssl.rsa.RSAPrivateKey\u001b[0m\u001b[39m object at \u001b[0m\u001b[1;36m0x7c20b0ff16b0\u001b[0m\u001b[1m>\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">&lt;</span><span style=\"color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold\">cryptography.hazmat.bindings._rust.openssl.rsa.RSAPrivateKey</span><span style=\"color: #000000; text-decoration-color: #000000\"> object at </span><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">0x7c20b0ff16b0</span><span style=\"font-weight: bold\">&gt;</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"P Number = \n\u001b[1;36m1403738222383905405377465055890775134242952471643233610751430425327258759801432810167611059286786705699017859398808\u001b[0m\n\u001b[1;36m9512857314857825968863711159509253439648926208627858733415121912272149337949794209962506089150815100307094340210878\u001b[0m\n\u001b[1;36m5944771900318401870516397533021068931925819733004949228103263484437440576338569\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">P Number = \n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">1403738222383905405377465055890775134242952471643233610751430425327258759801432810167611059286786705699017859398808</span>\n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">9512857314857825968863711159509253439648926208627858733415121912272149337949794209962506089150815100307094340210878</span>\n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">5944771900318401870516397533021068931925819733004949228103263484437440576338569</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Q Number = \n\u001b[1;36m1328906209291857539546034178694611153264712632872967171747265299937494466106286408877864343906748288852826416876494\u001b[0m\n\u001b[1;36m4612533411865075075600656022159817295067626364321527523439765578420465962777509866467348979817303710503919971685414\u001b[0m\n\u001b[1;36m5188223861182452659828286846606510881137424266277082572644197530567053946382421\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">Q Number = \n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">1328906209291857539546034178694611153264712632872967171747265299937494466106286408877864343906748288852826416876494</span>\n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4612533411865075075600656022159817295067626364321527523439765578420465962777509866467348979817303710503919971685414</span>\n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">5188223861182452659828286846606510881137424266277082572644197530567053946382421</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"D Number = \n\u001b[1;36m1625500274566009162984434588086327087258692581691856056095194133049826339411130384261208319933956920615668509201430\u001b[0m\n\u001b[1;36m8500770948692233130679983113308493431371598642051985380318156731551488112537623561730043179407102651921224503691088\u001b[0m\n\u001b[1;36m9089756512438207248979847419558165901446165464618127811203839147111445391999877457045483557968020289672156449823223\u001b[0m\n\u001b[1;36m7957032446419122015008206147747623925094697328838589567739303864224734335587887056793242794979739918036044744638495\u001b[0m\n\u001b[1;36m1903798007401256482143552303577573884575167924621249648517450544178615542547332558616817861774261757342964841519318\u001b[0m\n\u001b[1;36m65475402067048098116203531678417163493433\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">D Number = \n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">1625500274566009162984434588086327087258692581691856056095194133049826339411130384261208319933956920615668509201430</span>\n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">8500770948692233130679983113308493431371598642051985380318156731551488112537623561730043179407102651921224503691088</span>\n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">9089756512438207248979847419558165901446165464618127811203839147111445391999877457045483557968020289672156449823223</span>\n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">7957032446419122015008206147747623925094697328838589567739303864224734335587887056793242794979739918036044744638495</span>\n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">1903798007401256482143552303577573884575167924621249648517450544178615542547332558616817861774261757342964841519318</span>\n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">65475402067048098116203531678417163493433</span>\n</pre>\n"},"metadata":{}}],"execution_count":5},{"cell_type":"code","source":"# EXcercise Maths\n\nrprint(4391 * 6659)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T16:26:44.369113Z","iopub.execute_input":"2024-12-18T16:26:44.369813Z","iopub.status.idle":"2024-12-18T16:26:44.379531Z","shell.execute_reply.started":"2024-12-18T16:26:44.369771Z","shell.execute_reply":"2024-12-18T16:26:44.377965Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1;36m29239669\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">29239669</span>\n</pre>\n"},"metadata":{}}],"execution_count":6},{"cell_type":"markdown","source":"## RSA Related math question \n\nFormula \n\n$$\n\\phi(n) = n - p - q + 1\n$$\n\n$\nUsing above equation for the problem \n\n- Below one is good\n","metadata":{}},{"cell_type":"code","source":"## Operation \n\np1 = 4391\nq1 = 6659\nn1 = p1*q1\n\nphipa = (n1-p1-q1+1)\nrprint(phipa)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T16:26:44.382131Z","iopub.execute_input":"2024-12-18T16:26:44.382622Z","iopub.status.idle":"2024-12-18T16:26:44.397550Z","shell.execute_reply.started":"2024-12-18T16:26:44.382565Z","shell.execute_reply":"2024-12-18T16:26:44.395964Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1;36m29228620\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">29228620</span>\n</pre>\n"},"metadata":{}}],"execution_count":7},{"cell_type":"markdown","source":"# Diffie-Hellman Key Exchange \n\n1. This section will have the work being done for this algo\n\n\nFormula For the key exchange calculation\n- Formula writtenin a confusing way\n\n\n$$ \nA = g^a mod  p\n$$\n","metadata":{}},{"cell_type":"code","source":"# Using the formula \n\ndef secretA(p,g,a):\n    Asec = pow(g,a,p)\n    return Asec\n\nAlice = secretA(29,5,12)\nBob = secretA(29,5,17)\n\nrprint(f'AliceA = {Alice}')\nrprint(f'BobA = {Bob}')\n\n# Second Questions \n\ndef AliceBob(p,a,k):\n    key = pow(k,a, p)\n    return key\n\nBobKey = AliceBob(29,12, Bob)\nAliceKey = AliceBob(29,17, Alice)\n\nrprint(f'''\n\nBobKey = {BobKey}\nAliceKey = {AliceKey}\n'''\n      )\n\n","metadata":{"trusted":true,"scrolled":true,"execution":{"iopub.status.busy":"2024-12-18T16:26:44.399608Z","iopub.execute_input":"2024-12-18T16:26:44.400658Z","iopub.status.idle":"2024-12-18T16:26:44.423361Z","shell.execute_reply.started":"2024-12-18T16:26:44.400602Z","shell.execute_reply":"2024-12-18T16:26:44.421575Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"AliceA = \u001b[1;36m7\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">AliceA = <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">7</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"BobA = \u001b[1;36m9\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">BobA = <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">9</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\n\nBobKey = \u001b[1;36m24\u001b[0m\nAliceKey = \u001b[1;36m24\u001b[0m\n\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n\nBobKey = <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">24</span>\nAliceKey = <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">24</span>\n\n</pre>\n"},"metadata":{}}],"execution_count":8},{"cell_type":"markdown","source":"# Testing ED2519 \n\nThis is used for making the github keys ","metadata":{}},{"cell_type":"code","source":"# Example directly takem \n\nfrom cryptography.hazmat.primitives.asymmetric.ed25519 import Ed25519PrivateKey\n\nprivate_key = Ed25519PrivateKey.generate()\n\nsignature = private_key.sign(b\"my authenticated message\")\n\npublic_key = private_key.public_key()\n\n# Raises InvalidSignature if verification fails\n\npublic_key.verify(signature, b\"my authenticated message\")\n\n# Ur work from here \n\n#   Printing the raw bytes of the keys\n\nrprint(f'''\n\nPrivate Key = {private_key.private_bytes_raw()}\nPublic_Key = {public_key.public_bytes_raw()}\n''')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T16:26:44.425508Z","iopub.execute_input":"2024-12-18T16:26:44.425940Z","iopub.status.idle":"2024-12-18T16:26:44.570287Z","shell.execute_reply.started":"2024-12-18T16:26:44.425902Z","shell.execute_reply":"2024-12-18T16:26:44.568919Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"\n\nPrivate Key = \u001b[32mb'm\\xcf\\xa9\\xcc\\x8e\\xc7\\xe6\\xed\\xf3LG\\xad\\xa7\\x10\\xe6\\xb4\\x03iv\\x02Y-_\\x06\\xd7\\xf5\\x8b\\xffY\\x1a-\\xf7'\u001b[0m\nPublic_Key = \u001b[32mb'm\\xdbg\\x80\\n\\xb1\\x02\\t\\xb7P\\xfd\\xbaO\\xae\\xd4\\xedB\\xd1\\xaaoC\\xbdLg\u001b[0m\u001b[32m[\u001b[0m\u001b[32m\\xda\\xcc\\xc8<\\x98\\xdf/'\u001b[0m\n\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n\nPrivate Key = <span style=\"color: #008000; text-decoration-color: #008000\">b'm\\xcf\\xa9\\xcc\\x8e\\xc7\\xe6\\xed\\xf3LG\\xad\\xa7\\x10\\xe6\\xb4\\x03iv\\x02Y-_\\x06\\xd7\\xf5\\x8b\\xffY\\x1a-\\xf7'</span>\nPublic_Key = <span style=\"color: #008000; text-decoration-color: #008000\">b'm\\xdbg\\x80\\n\\xb1\\x02\\t\\xb7P\\xfd\\xbaO\\xae\\xd4\\xedB\\xd1\\xaaoC\\xbdLg[\\xda\\xcc\\xc8&lt;\\x98\\xdf/'</span>\n\n</pre>\n"},"metadata":{}}],"execution_count":9},{"cell_type":"markdown","source":"# Hashing Functions in python \n- Focussin librarise used for hasing in py","metadata":{}},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}