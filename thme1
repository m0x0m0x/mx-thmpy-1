{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30804,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# THMES \n\n1. Work for thmes , math and related ","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19"}},{"cell_type":"code","source":"# SexyPanties\nfrom rich import print as rprint # For rprinting\nfrom rich.pretty import pprint # For pretty printing\nfrom rich import inspect # For inspect\nfrom rich.console import Console # For console.print\nfrom rich.markdown import Markdown # For markdow\nfrom rich.panel import Panel # For Panel()\nfrom rich import box # For Panel Boxes\nfrom rich.prompt import Prompt # For Prompting \nfrom rich.style import Style # For styles colors\nfrom rich.text import Text # For text Styles\nconsole = Console() # Standard code to access console\nfrom rich.traceback import install\ninstall(show_locals=True)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T02:04:28.956388Z","iopub.execute_input":"2024-12-18T02:04:28.957238Z","iopub.status.idle":"2024-12-18T02:04:29.101722Z","shell.execute_reply.started":"2024-12-18T02:04:28.957199Z","shell.execute_reply":"2024-12-18T02:04:29.100516Z"}},"outputs":[{"execution_count":1,"output_type":"execute_result","data":{"text/plain":"<bound method InteractiveShell.excepthook of <ipykernel.zmqshell.ZMQInteractiveShell object at 0x7c0fc028c610>>"},"metadata":{}}],"execution_count":1},{"cell_type":"code","source":"# Python test codes \n\nrprint('Smelly Pantys')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T02:05:15.327251Z","iopub.execute_input":"2024-12-18T02:05:15.327681Z","iopub.status.idle":"2024-12-18T02:05:15.335177Z","shell.execute_reply.started":"2024-12-18T02:05:15.327639Z","shell.execute_reply":"2024-12-18T02:05:15.334077Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"Smelly Pantys\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">Smelly Pantys\n</pre>\n"},"metadata":{}}],"execution_count":3},{"cell_type":"markdown","source":"#  Code Testing will be done here ","metadata":{}},{"cell_type":"code","source":"# Section is for doing some opertaions on prime numbers \n\nfrom sympy import isprime, primerange\n\n# Check primality of a number\nif isprime(17):\n    print(\"17 is a prime number\")\n\n# Generate prime numbers in a range\nprimes = list(primerange(10, 30))\nrprint(primes)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T02:23:35.970359Z","iopub.execute_input":"2024-12-18T02:23:35.970882Z","iopub.status.idle":"2024-12-18T02:23:35.986164Z","shell.execute_reply.started":"2024-12-18T02:23:35.970842Z","shell.execute_reply":"2024-12-18T02:23:35.984993Z"}},"outputs":[{"name":"stdout","text":"17 is a prime number\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"\u001b[1m[\u001b[0m\u001b[1;36m11\u001b[0m, \u001b[1;36m13\u001b[0m, \u001b[1;36m17\u001b[0m, \u001b[1;36m19\u001b[0m, \u001b[1;36m23\u001b[0m, \u001b[1;36m29\u001b[0m\u001b[1m]\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">[</span><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">11</span>, <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">13</span>, <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">17</span>, <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">19</span>, <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">23</span>, <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">29</span><span style=\"font-weight: bold\">]</span>\n</pre>\n"},"metadata":{}}],"execution_count":5},{"cell_type":"markdown","source":"## Python Packages for cryptography \n\n1. https://cryptography.io/en/latest/ - Suggested by gemini for modern cryptgraphy","metadata":{}},{"cell_type":"code","source":"!pip install cryptography -q","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T02:27:26.191858Z","iopub.execute_input":"2024-12-18T02:27:26.192348Z","iopub.status.idle":"2024-12-18T02:27:37.732595Z","shell.execute_reply.started":"2024-12-18T02:27:26.192307Z","shell.execute_reply":"2024-12-18T02:27:37.731210Z"}},"outputs":[],"execution_count":7},{"cell_type":"markdown","source":"### Testing RSA Algo \n1. This was part of the stuff you are studying ","metadata":{}},{"cell_type":"code","source":"# Running operations with cryptography package\n\nfrom cryptography.hazmat.primitives.asymmetric import rsa\n\ndef r1():\n    private_key = rsa.generate_private_key(\n\n    public_exponent=65537,\n\n    key_size=2048,\n        )\n\n    rprint(private_key)\n    inspect(pri)\n\n# Execution zone \nr1()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T02:32:51.746879Z","iopub.execute_input":"2024-12-18T02:32:51.747807Z","iopub.status.idle":"2024-12-18T02:32:51.837030Z","shell.execute_reply.started":"2024-12-18T02:32:51.747766Z","shell.execute_reply":"2024-12-18T02:32:51.835945Z"},"scrolled":true},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1m<\u001b[0m\u001b[1;95mcryptography.hazmat.bindings._rust.openssl.rsa.RSAPrivateKey\u001b[0m\u001b[39m object at \u001b[0m\u001b[1;36m0x7c0f8b81ccd0\u001b[0m\u001b[1m>\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">&lt;</span><span style=\"color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold\">cryptography.hazmat.bindings._rust.openssl.rsa.RSAPrivateKey</span><span style=\"color: #000000; text-decoration-color: #000000\"> object at </span><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">0x7c0f8b81ccd0</span><span style=\"font-weight: bold\">&gt;</span>\n</pre>\n"},"metadata":{}}],"execution_count":13}]}