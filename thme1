{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30804,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# THM - Cryptography Excercises and work\n\n1. Work for thmes , math and related ","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19"}},{"cell_type":"code","source":"# SexyPanties\nfrom rich import print as rprint # For rprinting\nfrom rich.pretty import pprint # For pretty printing\nfrom rich import inspect # For inspect\nfrom rich.console import Console # For console.print\nfrom rich.markdown import Markdown # For markdow\nfrom rich.panel import Panel # For Panel()\nfrom rich import box # For Panel Boxes\nfrom rich.prompt import Prompt # For Prompting \nfrom rich.style import Style # For styles colors\nfrom rich.text import Text # For text Styles\nconsole = Console() # Standard code to access console\nfrom rich.traceback import install\ninstall(show_locals=True)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-19T00:52:41.730031Z","iopub.execute_input":"2024-12-19T00:52:41.730463Z","iopub.status.idle":"2024-12-19T00:52:41.936363Z","shell.execute_reply.started":"2024-12-19T00:52:41.730428Z","shell.execute_reply":"2024-12-19T00:52:41.935077Z"}},"outputs":[{"execution_count":1,"output_type":"execute_result","data":{"text/plain":"<bound method InteractiveShell.excepthook of <ipykernel.zmqshell.ZMQInteractiveShell object at 0x782ac5494610>>"},"metadata":{}}],"execution_count":1},{"cell_type":"code","source":"# Python test codes \n\nrprint('Smelly Pantys')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-19T00:52:41.938467Z","iopub.execute_input":"2024-12-19T00:52:41.938817Z","iopub.status.idle":"2024-12-19T00:52:41.950524Z","shell.execute_reply.started":"2024-12-19T00:52:41.938784Z","shell.execute_reply":"2024-12-19T00:52:41.949423Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"Smelly Pantys\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">Smelly Pantys\n</pre>\n"},"metadata":{}}],"execution_count":2},{"cell_type":"markdown","source":"#  Code Testing will be done here ","metadata":{}},{"cell_type":"code","source":"# Section is for doing some opertaions on prime numbers \n\nfrom sympy import isprime, primerange\n\n# Check primality of a number\nif isprime(17):\n    print(\"17 is a prime number\")\n\n# Generate prime numbers in a range\nprimes = list(primerange(10, 30))\nrprint(primes)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-19T00:52:41.951924Z","iopub.execute_input":"2024-12-19T00:52:41.952398Z","iopub.status.idle":"2024-12-19T00:52:42.353878Z","shell.execute_reply.started":"2024-12-19T00:52:41.952352Z","shell.execute_reply":"2024-12-19T00:52:42.352908Z"}},"outputs":[{"name":"stdout","text":"17 is a prime number\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"\u001b[1m[\u001b[0m\u001b[1;36m11\u001b[0m, \u001b[1;36m13\u001b[0m, \u001b[1;36m17\u001b[0m, \u001b[1;36m19\u001b[0m, \u001b[1;36m23\u001b[0m, \u001b[1;36m29\u001b[0m\u001b[1m]\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">[</span><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">11</span>, <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">13</span>, <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">17</span>, <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">19</span>, <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">23</span>, <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">29</span><span style=\"font-weight: bold\">]</span>\n</pre>\n"},"metadata":{}}],"execution_count":3},{"cell_type":"markdown","source":"## Python Packages for cryptography \n\n1. https://cryptography.io/en/latest/ - Suggested by gemini for modern cryptgraphy","metadata":{}},{"cell_type":"code","source":"!pip install cryptography -q","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-19T00:52:42.356226Z","iopub.execute_input":"2024-12-19T00:52:42.356642Z","iopub.status.idle":"2024-12-19T00:52:54.069627Z","shell.execute_reply.started":"2024-12-19T00:52:42.356611Z","shell.execute_reply":"2024-12-19T00:52:54.068182Z"}},"outputs":[],"execution_count":4},{"cell_type":"markdown","source":"### Testing RSA Algo \n1. This was part of the stuff you are studying ","metadata":{}},{"cell_type":"code","source":"# Running operations with cryptography package\n\nfrom cryptography.hazmat.primitives.asymmetric import rsa\n\ndef r1():\n    private_key = rsa.generate_private_key(\n\n    public_exponent=65537,\n\n    key_size=2048,\n        )\n\n    private_numbers = private_key.private_numbers()\n    rprint(private_key)\n    rprint(f'P Number = {private_numbers.p}')\n    rprint(f'Q Number = {private_numbers.q}')\n    rprint(f'D Number = {private_numbers.d}')\n    # inspect(private_key, all=True)\n\n# Execution zone \nr1()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-19T00:52:54.071344Z","iopub.execute_input":"2024-12-19T00:52:54.071726Z","iopub.status.idle":"2024-12-19T00:52:54.226183Z","shell.execute_reply.started":"2024-12-19T00:52:54.071690Z","shell.execute_reply":"2024-12-19T00:52:54.225145Z"},"scrolled":true},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1m<\u001b[0m\u001b[1;95mcryptography.hazmat.bindings._rust.openssl.rsa.RSAPrivateKey\u001b[0m\u001b[39m object at \u001b[0m\u001b[1;36m0x782aa45bf930\u001b[0m\u001b[1m>\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">&lt;</span><span style=\"color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold\">cryptography.hazmat.bindings._rust.openssl.rsa.RSAPrivateKey</span><span style=\"color: #000000; text-decoration-color: #000000\"> object at </span><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">0x782aa45bf930</span><span style=\"font-weight: bold\">&gt;</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"P Number = \n\u001b[1;36m1793941701165556175554993268494729302413175059783307132714217468703133859253039042771704153816321695339734737823943\u001b[0m\n\u001b[1;36m3682162307626221074641057076689303829283930186045239675194705435318045375305669102152482892964859765330894543856001\u001b[0m\n\u001b[1;36m4306957485457979777849172770799795699939202931672451216552502543805307595309331\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">P Number = \n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">1793941701165556175554993268494729302413175059783307132714217468703133859253039042771704153816321695339734737823943</span>\n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">3682162307626221074641057076689303829283930186045239675194705435318045375305669102152482892964859765330894543856001</span>\n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4306957485457979777849172770799795699939202931672451216552502543805307595309331</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Q Number = \n\u001b[1;36m1419802990958809604439055417150532297613126250477986143601013061895504242353600743594162885325295655492166600531475\u001b[0m\n\u001b[1;36m5328738263281219242159218615385671044498601154100496159493767270516915605615089633222461381379391259010659220025954\u001b[0m\n\u001b[1;36m6281740856849066263840085334625539897258064419156175818053677306001640328533167\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">Q Number = \n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">1419802990958809604439055417150532297613126250477986143601013061895504242353600743594162885325295655492166600531475</span>\n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">5328738263281219242159218615385671044498601154100496159493767270516915605615089633222461381379391259010659220025954</span>\n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">6281740856849066263840085334625539897258064419156175818053677306001640328533167</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"D Number = \n\u001b[1;36m1257995644186438682862131024656359908190117707429591708872348067174895915746928639759903783579738643248623310883019\u001b[0m\n\u001b[1;36m1519235914561612723513184680900755553010602274312368353429808405248229340495236799185177503384447524187856321260114\u001b[0m\n\u001b[1;36m9160064959646940482577390666284849658694440194781986232221365896315339413820761546063035826283970511196000556364302\u001b[0m\n\u001b[1;36m1313979843427940333956915062739374616474101726582369783431562823684951631416250707659195502773496387835979885565272\u001b[0m\n\u001b[1;36m6579733764690653771054908478869093513480907483257233674544287754852058843535667510254095892517738337146412699584422\u001b[0m\n\u001b[1;36m104628418891161348436496267646772443358333\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">D Number = \n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">1257995644186438682862131024656359908190117707429591708872348067174895915746928639759903783579738643248623310883019</span>\n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">1519235914561612723513184680900755553010602274312368353429808405248229340495236799185177503384447524187856321260114</span>\n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">9160064959646940482577390666284849658694440194781986232221365896315339413820761546063035826283970511196000556364302</span>\n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">1313979843427940333956915062739374616474101726582369783431562823684951631416250707659195502773496387835979885565272</span>\n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">6579733764690653771054908478869093513480907483257233674544287754852058843535667510254095892517738337146412699584422</span>\n<span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">104628418891161348436496267646772443358333</span>\n</pre>\n"},"metadata":{}}],"execution_count":5},{"cell_type":"code","source":"# EXcercise Maths\n\nrprint(4391 * 6659)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-19T00:52:54.227480Z","iopub.execute_input":"2024-12-19T00:52:54.227990Z","iopub.status.idle":"2024-12-19T00:52:54.235297Z","shell.execute_reply.started":"2024-12-19T00:52:54.227959Z","shell.execute_reply":"2024-12-19T00:52:54.234098Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1;36m29239669\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">29239669</span>\n</pre>\n"},"metadata":{}}],"execution_count":6},{"cell_type":"markdown","source":"## RSA Related math question \n\nFormula \n\n$$\n\\phi(n) = n - p - q + 1\n$$\n\n$\nUsing above equation for the problem \n\n- Below one is good\n","metadata":{}},{"cell_type":"code","source":"## Operation \n\np1 = 4391\nq1 = 6659\nn1 = p1*q1\n\nphipa = (n1-p1-q1+1)\nrprint(phipa)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-19T00:52:54.236599Z","iopub.execute_input":"2024-12-19T00:52:54.236999Z","iopub.status.idle":"2024-12-19T00:52:54.246849Z","shell.execute_reply.started":"2024-12-19T00:52:54.236963Z","shell.execute_reply":"2024-12-19T00:52:54.245735Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1;36m29228620\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">29228620</span>\n</pre>\n"},"metadata":{}}],"execution_count":7},{"cell_type":"markdown","source":"# Diffie-Hellman Key Exchange \n\n1. This section will have the work being done for this algo\n\n\nFormula For the key exchange calculation\n- Formula writtenin a confusing way\n\n\n$$ \nA = g^a mod  p\n$$\n","metadata":{}},{"cell_type":"code","source":"# Using the formula \n\ndef secretA(p,g,a):\n    Asec = pow(g,a,p)\n    return Asec\n\nAlice = secretA(29,5,12)\nBob = secretA(29,5,17)\n\nrprint(f'AliceA = {Alice}')\nrprint(f'BobA = {Bob}')\n\n# Second Questions \n\ndef AliceBob(p,a,k):\n    key = pow(k,a, p)\n    return key\n\nBobKey = AliceBob(29,12, Bob)\nAliceKey = AliceBob(29,17, Alice)\n\nrprint(f'''\n\nBobKey = {BobKey}\nAliceKey = {AliceKey}\n'''\n      )\n\n","metadata":{"trusted":true,"scrolled":true,"execution":{"iopub.status.busy":"2024-12-19T00:52:54.248405Z","iopub.execute_input":"2024-12-19T00:52:54.248847Z","iopub.status.idle":"2024-12-19T00:52:54.269878Z","shell.execute_reply.started":"2024-12-19T00:52:54.248800Z","shell.execute_reply":"2024-12-19T00:52:54.268879Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"AliceA = \u001b[1;36m7\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">AliceA = <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">7</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"BobA = \u001b[1;36m9\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">BobA = <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">9</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\n\nBobKey = \u001b[1;36m24\u001b[0m\nAliceKey = \u001b[1;36m24\u001b[0m\n\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n\nBobKey = <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">24</span>\nAliceKey = <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">24</span>\n\n</pre>\n"},"metadata":{}}],"execution_count":8},{"cell_type":"markdown","source":"# Testing ED2519 \n\nThis is used for making the github keys ","metadata":{}},{"cell_type":"code","source":"# Example directly takem \n\nfrom cryptography.hazmat.primitives.asymmetric.ed25519 import Ed25519PrivateKey\n\nprivate_key = Ed25519PrivateKey.generate()\n\nsignature = private_key.sign(b\"my authenticated message\")\n\npublic_key = private_key.public_key()\n\n# Raises InvalidSignature if verification fails\n\npublic_key.verify(signature, b\"my authenticated message\")\n\n# Ur work from here \n\n#   Printing the raw bytes of the keys\n\nrprint(f'''\n\nPrivate Key = {private_key.private_bytes_raw()}\nPublic_Key = {public_key.public_bytes_raw()}\n''')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-19T00:52:54.271554Z","iopub.execute_input":"2024-12-19T00:52:54.272034Z","iopub.status.idle":"2024-12-19T00:52:54.371228Z","shell.execute_reply.started":"2024-12-19T00:52:54.271984Z","shell.execute_reply":"2024-12-19T00:52:54.369923Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"\n\nPrivate Key = \u001b[32mb'\\xc6\\xfd:\\x04k1\\xee`\\xc4W\\xd8?\\x96\\xd4\\xe6\\xd6u\\x8e\\xcc\\x1f\\xb3_\\xf2\\xe0;\\x10\u001b[0m\u001b[32m(\u001b[0m\u001b[32m?\\xdf\u001b[0m\u001b[32m{\u001b[0m\u001b[32mu&'\u001b[0m\nPublic_Key = \n\u001b[32mb'\\x8c\\xcb\\xad~=u\\x95\\xe3\\x86\\xf2\\x12\\xd9\\xc8\\xa8\\xec\\xf7\\xc1P\u001b[0m\u001b[32m}\u001b[0m\u001b[32m\\xa20\\xe6\\xb2\\x8c\\x98\\xfd\\xa7\\xd5S\\xa3?d'\u001b[0m\n\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n\nPrivate Key = <span style=\"color: #008000; text-decoration-color: #008000\">b'\\xc6\\xfd:\\x04k1\\xee`\\xc4W\\xd8?\\x96\\xd4\\xe6\\xd6u\\x8e\\xcc\\x1f\\xb3_\\xf2\\xe0;\\x10(?\\xdf{u&amp;'</span>\nPublic_Key = \n<span style=\"color: #008000; text-decoration-color: #008000\">b'\\x8c\\xcb\\xad~=u\\x95\\xe3\\x86\\xf2\\x12\\xd9\\xc8\\xa8\\xec\\xf7\\xc1P}\\xa20\\xe6\\xb2\\x8c\\x98\\xfd\\xa7\\xd5S\\xa3?d'</span>\n\n</pre>\n"},"metadata":{}}],"execution_count":9},{"cell_type":"markdown","source":"# Hashing Functions in python \n- Focussin librarise used for hasing in py\n\n## Commonly Used Hashing Alogrithms for python \n\n1. pycryptodome - https://www.pycryptodome.org/ - Official Docs\n2. hashlib - python native library\n   ","metadata":{}},{"cell_type":"code","source":"# Using python native lirbary \nimport hashlib\n\nstring_data = \"This is some data to hash.\"\nbytes_data = string_data.encode('utf-8') # Encode the string to bytes\n\nsha256_hash = hashlib.sha256(bytes_data).hexdigest()\nrprint(sha256_hash)\n\n# Or, more concisely:\nsha256_hash = hashlib.sha256(string_data.encode()).hexdigest()\nrprint(sha256_hash)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-19T00:52:54.374275Z","iopub.execute_input":"2024-12-19T00:52:54.374732Z","iopub.status.idle":"2024-12-19T00:52:54.385924Z","shell.execute_reply.started":"2024-12-19T00:52:54.374699Z","shell.execute_reply":"2024-12-19T00:52:54.384734Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"1c68045a3b94146c78b1451fd8c2b5f852766a87b2b715fa43f0b37c5ca3811a\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">1c68045a3b94146c78b1451fd8c2b5f852766a87b2b715fa43f0b37c5ca3811a\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"1c68045a3b94146c78b1451fd8c2b5f852766a87b2b715fa43f0b37c5ca3811a\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">1c68045a3b94146c78b1451fd8c2b5f852766a87b2b715fa43f0b37c5ca3811a\n</pre>\n"},"metadata":{}}],"execution_count":10},{"cell_type":"code","source":"# Above script broken down into functions \n\nimport hashlib \n\ndef hasher(a):\n    by_a = a.encode('utf-8')\n    by_da_256 = hashlib.sha256(by_a).hexdigest()\n    by_da_512 = hashlib.sha512(by_a).hexdigest()\n    return by_da_256, by_da_512\n\nmy_data = \"Lick Her ass and pussy\"\ns256, s512 = hasher(my_data)\n\n\nrprint(f'''\nMainData = {my_data}\nsha256 = {s256} , Length  = {len(s256)}\nsha512 = {s512} , Length  = {len(s512)}\n''')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-19T00:52:54.387544Z","iopub.execute_input":"2024-12-19T00:52:54.387995Z","iopub.status.idle":"2024-12-19T00:52:54.401721Z","shell.execute_reply.started":"2024-12-19T00:52:54.387945Z","shell.execute_reply":"2024-12-19T00:52:54.400607Z"},"scrolled":true},"outputs":[{"output_type":"display_data","data":{"text/plain":"\nMainData = Lick Her ass and pussy\nsha256 = 44250128c6476230f1fd433280d06c9289ed9d7cb7dc6c23c1bfa40bc94d860d , Length  = \u001b[1;36m64\u001b[0m\nsha512 = \n1c4a3a79c9c179f1ff5a2b5ea4b008f32effbcc49ce33f449b07d002a19b955076ee14f1e42d0a68f678c642143aae523b6605765e5e789bcc4\nbdb4a7587c1a2 , Length  = \u001b[1;36m128\u001b[0m\n\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\nMainData = Lick Her ass and pussy\nsha256 = 44250128c6476230f1fd433280d06c9289ed9d7cb7dc6c23c1bfa40bc94d860d , Length  = <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">64</span>\nsha512 = \n1c4a3a79c9c179f1ff5a2b5ea4b008f32effbcc49ce33f449b07d002a19b955076ee14f1e42d0a68f678c642143aae523b6605765e5e789bcc4\nbdb4a7587c1a2 , Length  = <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">128</span>\n\n</pre>\n"},"metadata":{}}],"execution_count":11}]}